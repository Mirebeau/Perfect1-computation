Perfect1(A2) has 1 elements, split in equivalence classes of cardinality [1] modulo isometries of A2
Representatives of Perfect1 : [(0, array([[-1,  0],
       [ 0,  1]]))]

Perfect1(A3) has 3 elements, split in equivalence classes of cardinality [3] modulo isometries of A3
Representatives of Perfect1 : [(0, array([[ 0,  0,  1],
       [-1,  1,  0],
       [ 1,  0, -1]]))]

Perfect1(A4) has 22 elements, split in equivalence classes of cardinality [12, 10] modulo isometries of A4
Representatives of Perfect1 : [(1, array([[-1,  1,  0,  0],
       [ 0, -1,  0,  0],
       [ 1,  0,  0, -1],
       [ 0,  0,  1,  0]])), (0, array([[ 1, -1,  0,  0],
       [ 0,  1,  0,  0],
       [-1,  1, -1,  0],
       [ 0, -1,  0,  1]]))]

Perfect1(D4) has 545 elements, split in equivalence classes of cardinality [1, 48, 16, 144, 48, 288] modulo isometries of D4
Representatives of Perfect1 : [(0, array([[ 1,  0,  0,  0],
       [-1,  0,  1,  0],
       [-1,  1,  0, -1],
       [ 1, -1,  0,  0]])), (1, array([[-1,  0,  0,  0],
       [ 1,  0, -1,  0],
       [ 1, -1,  0,  1],
       [-1,  0,  1, -1]])), (0, array([[ 0,  0,  1,  0],
       [ 1,  0, -1,  0],
       [ 0,  1, -1,  0],
       [-1,  0,  1, -1]])), (0, array([[ 1,  0,  0,  0],
       [-1,  1,  0, -1],
       [-2,  0,  1,  0],
       [ 2,  0, -1,  1]])), (1, array([[-1,  0,  0, -1],
       [ 0,  0,  0,  1],
       [ 1, -1,  0,  1],
       [ 0,  1, -1, -1]])), (1, array([[ 0, -1,  0,  0],
       [-1,  0,  1,  0],
       [ 0,  1, -1,  0],
       [ 0,  0,  0, -1]]))]

Perfect1(A5) has 880 elements, split in equivalence classes of cardinality [180, 180, 60, 90, 60, 120, 90, 60, 30, 10] modulo isometries of A5
Representatives of Perfect1 : [(0, array([[ 0,  0, -1,  0,  1],
       [-1,  0,  1,  1, -1],
       [ 0,  0,  1, -1,  0],
       [ 0,  1,  0,  0,  0],
       [ 1, -1, -1,  0,  1]])), (0, array([[-1,  1,  0,  1, -1],
       [ 0,  0,  0, -1,  1],
       [ 1, -1,  0,  0,  1],
       [ 1,  0, -1, -1,  1],
       [-1,  1,  1,  1, -2]])), (0, array([[-1,  1,  0,  1, -1],
       [ 1,  0,  0, -1,  1],
       [ 0, -1,  0,  0,  1],
       [ 1, -1,  0,  0,  0],
       [-2,  1,  1,  1, -2]])), (0, array([[ 0,  1,  0, -1,  0],
       [ 0,  0,  0,  1,  0],
       [ 0, -1,  0,  0,  1],
       [ 1, -1,  0,  0,  0],
       [-1,  1,  1, -1, -1]])), (0, array([[ 1,  0, -1,  0,  0],
       [ 0,  0,  0, -1,  1],
       [-1, -1,  1,  1, -1],
       [-1,  1,  0,  0,  0],
       [ 1,  0,  0,  0, -1]])), (2, array([[ 1,  0, -1, -1,  1],
       [ 0,  1, -1,  0,  0],
       [ 1,  0, -1,  0,  1],
       [ 1,  0, -1,  0,  0],
       [ 1,  1, -1, -1,  1]])), (2, array([[ 0,  0, -1,  1,  0],
       [ 0,  1, -1,  0,  0],
       [ 1,  0, -1,  0,  1],
       [ 1,  0, -1,  0,  0],
       [ 0,  1, -1,  1,  0]])), (1, array([[ 1,  0,  0, -1,  0],
       [ 0,  0, -1,  1,  0],
       [ 0, -1,  0,  0,  0],
       [-1,  1,  0,  0,  0],
       [ 0,  0,  1,  0, -1]])), (2, array([[-1,  0,  1,  1, -1],
       [-1,  0,  1,  0, -1],
       [-1,  0,  0,  1, -1],
       [-1,  0,  1,  1, -2],
       [-2,  1,  1,  1, -2]])), (2, array([[-1,  1,  0,  0,  0],
       [-1,  0,  0,  0,  0],
       [-1,  1,  1, -1, -1],
       [-1,  1,  0,  0, -1],
       [-1,  1,  0, -1,  0]]))]
